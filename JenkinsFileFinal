pipeline {
    agent any
    tools {
        maven 'LocalMaven'
        jdk 'LocalJDK8'
    }
    stages {	
		stage('Job01-git-mvn') {
				triggers {
					pollSCM('* * * * 1-5')
				}
				steps {
					git 'https://github.com/Fran-mggc/Spring3MVC.git'
					bat 'mvn clean test'
				}
		}
		stage('Descarga Git package') {
				steps {               
					git 'https://github.com/Fran-mggc/Spring3MVC.git'
					bat 'mvn clean package'
					archiveArtifacts '**/*.war'                
				}
		}
		stage('Sonar') {
				steps {				
					git 'https://github.com/Fran-mggc/Spring3MVC.git'
                			bat 'mvn sonar:sonar -Dsonar.host.url=http://localhost:9000 -Dsonar.login=admin -Dsonar.password=admin -Dsonar.projectName=SpringSonarMVC'               
				}
		}
		stage('Deploy') {
				steps { 
					copyArtifacts fingerprintArtifacts: true, projectName: 'EjercicioFinal', selector: specific(${BUILD_NUMBER})
					//copyArtifacts filter: '**/*.war', fingerprintArtifacts: true, projectName: 'EjercicioFinal', selector: workspace()
					//copyArtifacts filter: '**/*.war', fingerprintArtifacts: true, projectName: 'EjercicioFinal', selector: lastWithArtifacts()
					deploy adapters: [tomcat8(credentialsId: 'd37b2846-f1e2-42ae-aa39-e1d3c6994fd6', path: '', url: 'http://localhost:8081')], contextPath: null, war: '**/*.war'            
				}
		}        
	}
}
